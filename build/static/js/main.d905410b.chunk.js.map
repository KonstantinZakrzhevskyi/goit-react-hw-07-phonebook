{"version":3,"sources":["components/Filter/Filter.module.css","components/Section/Section.module.css","components/Loader/Loader.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Loader/Loader.js","components/Section/Section.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","actions","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","items","createReducer","state","filter","contact","_","combineReducers","persistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","Loading","className","s","loader","type","color","height","width","timeout","Section","title","children","section","section__title","getContacts","getFilter","getVisidleContacts","normalizeFilter","toLowerCase","trim","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleInputChange","e","currentTarget","value","reset","form","onSubmit","preventDefault","map","alert","form__label","form__input","pattern","required","onChange","form__btn","disabled","Filter","filter__label","filter__text","filter__input","ContactList","contact__list","contact__item","contact__text","contact__btn","onClick","onDeleteContact","App","ReactDOM","render","StrictMode","loading","Loader","document","getElementById"],"mappings":"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","file":"static/js/main.d905410b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__text\":\"Filter_filter__text__2ApV8\",\"filter__input\":\"Filter_filter__input__3kPwl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__et4rx\",\"section__title\":\"Section_section__title__38Eli\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1WdSh\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\nconst changeFilter = createAction('contacts/filter');\r\n\r\nconst actions = { addContact, deleteContact, changeFilter };\r\n\r\nexport default actions;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistConfig, contactsReducer),\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className={s.loader}>\r\n      <Loader\r\n        type=\"BallTriangle\"\r\n        color=\"#00BFFF\"\r\n        height={200}\r\n        width={200}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      {title && <h2 className={s.section__title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisidleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizeFilter = filter.toLowerCase().trim();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizeFilter),\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport actions from 'redux/contacts/contacts-actions';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    contacts.map(contact => contact.name).includes(name)\r\n      ? alert(`${name} is already in contacts.`)\r\n      : dispatch(actions.addContact({ name, number }));\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.form__label}>\r\n        Name\r\n        <input\r\n          className={s.form__input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n\r\n      <label className={s.form__label}>\r\n        Number\r\n        <input\r\n          className={s.form__input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <button className={s.form__btn} type=\"submit\" disabled={!name}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport actions from 'redux/contacts/contacts-actions';\r\nimport { getFilter } from 'redux/contacts/contacts-selectors';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.filter__label}>\r\n      <p className={s.filter__text}>Find contacts by name</p>\r\n      <input\r\n        className={s.filter__input}\r\n        type=\"text\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={value}\r\n        onChange={e => dispatch(actions.changeFilter(e.currentTarget.value))}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport actions from 'redux/contacts/contacts-actions';\r\nimport { getVisidleContacts } from 'redux/contacts/contacts-selectors';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(getVisidleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(actions.deleteContact(id));\r\n\r\n  return (\r\n    <ul className={s.contact__list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.contact__item} key={id}>\r\n          <p className={s.contact__text}>{name}:</p>\r\n          <p className={s.contact__text}>{number}</p>\r\n          <button\r\n            className={s.contact__btn}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import Section from 'components/Section';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport Loader from 'components/Loader';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<Loader />} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1KRuY\",\"form__label\":\"ContactForm_form__label__EtJEK\",\"form__input\":\"ContactForm_form__input__SDVcL\",\"form__btn\":\"ContactForm_form__btn__rkXcW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__list\":\"ContactList_contact__list__1yZU9\",\"contact__item\":\"ContactList_contact__item__2SFS0\",\"contact__text\":\"ContactList_contact__text__2nTbs\",\"contact__btn\":\"ContactList_contact__btn__2Mxlv\"};"],"sourceRoot":""}